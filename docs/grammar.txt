IGNORE      : ' \t\x0c'
DELIM       : r';'
ICONST      : r'\d+'
ID          : r'[A-Za-z_][\w_]*'
NEWLINE     : r'\n+'
EQUAL       : r'='
LPAREN      : r'\('
RPAREN      : r'\)'
COMMA       : r','
COMMENT     : r'/\*(.|\n)*?\*/'
CPPCOMMENT  : r'//.*\n'
EQ          : r'=='
NE          : r'!='
GT          : r'>'
GE          : r'>='
LT          : r'<'
LE          : r'<='
LBRACE      : r'\{'
RBRACE      : r'\}'

program : program statement
        | statement
        | empty

statement : declare_statement DELIM
          | assign_statement DELIM
          | init_statement DELIM
          | command_statement DELIM
          | conditional_statement
          | loop_statement

empty :

declare_statement : type_specifier ID

init_statement : INICIALIZAR LPAREN ID RPAREN

assign_statement : ID EQUAL expression

type_specifier : INT
               | COLA
               | PILA

expression : ID
           | constant
           | command_statement
           | comparison_expression

constant : ICONST

command_statement : command LPAREN command_args RPAREN

command : MOSTRAR
        | INGRESAR
        | ACOLAR
        | DESACOLAR
        | PRIMERO
        | COLAVACIA
        | APILAR
        | DESAPILAR
        | TOPE
        | PILAVACIA

command_args : ID COMMA ID
             | ID COMMA constant
             | expression

comparison_expression : expression EQ expression
                      | expression NE expression
                      | expression NE expression
                      | expression GT expression
                      | expression GE expression
                      | expression LT expression
                      | expression LE expression

conditional_statement : IF LPAREN expression RPAREN LBRACE program RBRACE

loop_statement : while_loop_statement
               | for_loop_statement*

while_loop_statement : WHILE LPAREN expression RPAREN LBRACE program RBRACE

for_loop_statement* : FOR LPAREN expression RPAREN LBRACE program RBRACE

* not implemented yet
